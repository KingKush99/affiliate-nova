
const $=(s,c=document)=>c.querySelector(s), $$=(s,c=document)=>[...c.querySelectorAll(s)];
// tokens
const bal=()=>parseInt(localStorage.getItem("nc_tokens")||"1000",10);
const setBal=v=>{localStorage.setItem("nc_tokens",v); ["#tokenBalance","#slotBal"].forEach(id=>$(id)&&( $(id).textContent=bal().toLocaleString() ));};
setBal(bal());

// ---------- Rooms / Models ----------
let ROOMS=[]; const state={search:""};
function renderRooms(){const g=$("#roomsGrid"); if(!g||!ROOMS.length) return; const list=ROOMS.filter(r=>!state.search||(r.name.toLowerCase().includes(state.search)||r.title.toLowerCase().includes(state.search))); $("#resultCount")&&( $("#resultCount").textContent=`${list.length} rooms` ); g.innerHTML=""; list.forEach(r=>{const el=document.createElement("a"); el.href="#"; el.className="block rounded-xl overflow-hidden bg-surface border border-white/10 hover:border-white/20 transition"; el.innerHTML=`<div class='relative aspect-video bg-gradient-to-br from-slate-800 to-slate-900 grid place-items-center'><span class='text-4xl font-black opacity-20'>${r.name[0].toUpperCase()}</span><span class='absolute top-2 right-2 px-2 py-1 text-xs rounded bg-black/60 border border-white/10'>${(r.viewers||0).toLocaleString()} watching</span></div><div class='p-3'><div class='flex items-center gap-2'><h3 class='font-semibold truncate'>${r.name}</h3><span class='ml-auto text-xs px-2 py-1 rounded bg-white/10'>${r.gender}</span></div><p class='text-sm text-slate-400 truncate'>${r.title}</p><div class='mt-1 flex items-center gap-3 text-xs text-slate-400'><span>üåé ${r.region}</span><span>üè∑Ô∏è ${r.tags.slice(0,2).join(", ")}</span><span class='ml-auto'>üíé ${r.rate}/min</span></div></div>`; g.append(el);});}
fetch("data/rooms.json").then(r=>r.json()).then(d=>{ROOMS=d; renderRooms();});

// ---------- Search ----------
$("#searchInput")?.addEventListener("input",e=>{state.search=e.target.value.toLowerCase(); renderRooms();});

// ---------- XP / Levels ----------
const XP_KEY="an_xp"; function getXP(){return parseInt(localStorage.getItem(XP_KEY)||"0",10);} function setXP(v){localStorage.setItem(XP_KEY, Math.max(0,v));}
function totalForLevel(n){return Math.floor(1000*n*(n+1)/2);} function levelFromXP(xp){return Math.max(0, Math.floor((Math.sqrt(1+8*(xp/1000))-1)/2));}
function nextGap(L){return 1000*(L+1);} function progressInfo(){const xp=getXP(),L=levelFromXP(xp),base=totalForLevel(L),gap=nextGap(L),into=xp-base;return {xp,L,into,gap};}
function grantXP(n){setXP(getXP()+n); renderProfile(); renderTopLevels();}

function renderProfile(){ if(!location.pathname.endsWith("profile.html")) return; const info=progressInfo(); $("#levelNum").textContent=info.L; $("#xpBar").style.width=Math.round(100*info.into/Math.max(1,info.gap))+"%"; $("#xpNow").textContent=info.into.toLocaleString(); $("#xpNext").textContent=info.gap.toLocaleString(); $("#totalXP").textContent=getXP().toLocaleString(); }
document.addEventListener("click",e=>{const el=e.target.closest(".earn"); if(el){grantXP(parseInt(el.dataset.xp||"0",10));}});
$("#resetXP")?.addEventListener("click",()=>{setXP(0); renderProfile();});
document.addEventListener("DOMContentLoaded",renderProfile);

// ---------- Quiz base (typo tolerant) + Settings + 5s timer + Single/Local2 + ELO ----------
let QUIZ=[], qi=0, score=0;
const DEFAULT_QUIZ=[{name:"Streamer Alpha",img:"assets/quiz/1.svg"},{name:"Creator Beta",img:"assets/quiz/2.svg"},{name:"Gamer Gamma",img:"assets/quiz/3.svg"}];
function norm(s){return (s||'').toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g,'').replace(/[^a-z0-9]/g,'');}
function splitName(n){const p=(n||'').trim().split(/\s+/); const last=p.pop()||''; const first=p.join(' '); return {first,last};}
function dist(a,b){const m=a.length,n=b.length; if(!m) return n; if(!n) return m; const dp=new Array(n+1); for(let j=0;j<=n;j++)dp[j]=j; for(let i=1;i<=m;i++){let prev=dp[0],tmp; dp[0]=i; for(let j=1;j<=n;j++){tmp=dp[j]; const c=(a[i-1]===b[j-1])?0:1; dp[j]=Math.min(dp[j]+1, dp[j-1]+1, prev+c); prev=tmp;}} return dp[n];}
function matchAnswer(input, person){const {first,last}=splitName(person.name||''); const aliases=[norm(last),norm(first+' '+last),norm(first+last)]; const ans=norm(input); return aliases.some(a=> ans===a || dist(ans,a)<=Math.max(1,Math.floor(a.length*0.2)));}
const QUIZ_LOG="an_quiz_scores"; function saveQuizResult(correct,total,ms){const list=JSON.parse(localStorage.getItem(QUIZ_LOG)||"[]"); const score=correct*1e9-ms; list.push({correct,total,ms,ts:Date.now(),score}); localStorage.setItem(QUIZ_LOG,JSON.stringify(list));}
function getQuizStats(){try{const list=JSON.parse(localStorage.getItem(QUIZ_LOG)||"[]"); return {taken:list.length};}catch(_){return {taken:0};}}
const ELO_KEY="nc_elo"; function getElo(name){const m=JSON.parse(localStorage.getItem(ELO_KEY)||"{}"); return m[name]||1000;} function setElo(name,val){const m=JSON.parse(localStorage.getItem(ELO_KEY)||"{}"); m[name]=Math.round(val); localStorage.setItem(ELO_KEY,JSON.stringify(m));}
function eloUpdate(a,b,aScore){const K=32; const Qa=Math.pow(10,a/400), Qb=Math.pow(10,b/400), Ea=Qa/(Qa+Qb); return [a + K*(aScore - Ea), b + K*((1-aScore) - (1-Ea))]; }
async function pickQuizSet(N){const bank=JSON.parse(localStorage.getItem("nc_bank")||"[]"); let pool=bank.length?bank: await fetch('data/quiz.json?nocache='+Date.now(),{cache:'no-store'}).then(r=>r.json()).catch(()=>DEFAULT_QUIZ); pool=pool.filter(x=>x&&x.name&&x.img); const out=[]; const used=new Set(); while(out.length<Math.min(N,pool.length)){const i=Math.floor(Math.random()*pool.length); if(used.has(i)) continue; used.add(i); out.push(pool[i]);} return out;}
function getBestQuizScore(){const list=JSON.parse(localStorage.getItem(QUIZ_LOG)||"[]"); if(!list.length) return null; list.sort((a,b)=>b.score-a.score); return list[0];}

// Settings modal + importer
(function injectQuizSettings(){
  const html = `<div id="quizSettings" class="fixed inset-0 hidden z-50"><div class="absolute inset-0 bg-black/70"></div><div class="relative mx-auto mt-16 w-[94%] max-w-xl bg-surface border border-white/10 rounded-2xl p-6"><div class="flex items-center justify-between mb-3"><h3 class="text-xl font-semibold">Quiz Settings</h3><button id="qsClose" class="px-2 py-1 rounded bg-white/10">‚úï</button></div><div class="space-y-4 text-sm"><div><div class="text-slate-300 mb-1">Questions</div><div id="qsCount" class="flex gap-2 flex-wrap">${[10,25,50,100].map(n=>`<label class='chip'><input type='radio' name='qsN' value='${n}' class='mr-1'> ${n}</label>`).join('')}</div></div><div><div class="text-slate-300 mb-1">Mode</div><label class="chip mr-2"><input type="radio" name="qsMode" value="single" class="mr-1" checked> Single</label><label class="chip"><input type="radio" name="qsMode" value="local2" class="mr-1"> Local multiplayer</label><div class="mt-2 grid grid-cols-2 gap-2" id="qsPlayers" style="display:none"><input id="p1Name" class="px-3 py-2 rounded-xl bg-surface border border-white/10" placeholder="Player 1 (You)"><input id="p2Name" class="px-3 py-2 rounded-xl bg-surface border border-white/10" placeholder="Player 2"></div><div class="mt-2 text-xs text-slate-400">Each question has <b>5 seconds</b>.</div></div><div><div class="text-slate-300 mb-1">Image Bank</div><textarea id="bankInput" class="w-full h-28 mt-2 px-3 py-2 rounded-xl bg-surface border border-white/10" placeholder="Jane Doe | https://.../jane.jpg"></textarea><div class="flex items-center gap-2 mt-2"><button id="bankImport" class="px-3 py-2 rounded-xl bg-slate-700">Import into Bank</button><span id="bankCount" class="text-xs text-slate-400">0 in bank</span></div></div><div class="flex gap-2"><button id="qsStart" class="px-4 py-2 rounded-xl bg-brand">Start</button><button id="qsCancel" class="px-4 py-2 rounded-xl bg-slate-700">Cancel</button></div></div></div></div>`;
  document.body.insertAdjacentHTML('beforeend', html);
  const modal=$("#quizSettings");
  $("#qsClose")?.addEventListener("click",()=>modal.classList.add("hidden"));
  $("#qsCancel")?.addEventListener("click",()=>modal.classList.add("hidden"));
  document.addEventListener("change",(e)=>{ if(e.target.name==="qsMode"){ $("#qsPlayers").style.display = (e.target.value==="local2")?'grid':'none'; } });
  $("#bankImport")?.addEventListener("click",()=>{ const txt=$("#bankInput").value||""; const rows=txt.split(/\\n+/).map(s=>s.trim()).filter(Boolean); const add=[]; rows.forEach(line=>{ const m=line.split("|"); if(m.length>=2) add.push({name:m[0].trim(), img:m.slice(1).join("|").trim()}); }); const key="nc_bank"; const cur=JSON.parse(localStorage.getItem(key)||"[]"); const merged=[...cur,...add].slice(-10000); localStorage.setItem(key,JSON.stringify(merged)); $("#bankCount").textContent=merged.length+" in bank"; });
  $("#qsStart")?.addEventListener("click",()=>{ const n=parseInt((document.querySelector("input[name='qsN']:checked")?.value)||"10",10); const mode=(document.querySelector("input[name='qsMode']:checked")?.value)||"single"; const p1=$("#p1Name").value.trim()||"You"; const p2=$("#p2Name").value.trim()||"Player 2"; modal.classList.add("hidden"); launchQuiz({n,mode,p1,p2}); });
  $("#quizOpen")?.addEventListener("click",e=>{e.preventDefault(); $("#bankCount").textContent=(JSON.parse(localStorage.getItem('nc_bank')||'[]').length||0)+' in bank'; modal.classList.remove("hidden"); });
})();

async function launchQuiz({n,mode,p1,p2}){
  const data=await pickQuizSet(n); let idx=0, correctA=0, correctB=0, total=data.length, curr='A'; const start=Date.now();
  function show(){ if(idx>=total) return finish(); $("#quizImg").src=data[idx].img; $("#quizGuess").value=''; $("#quizFeedback").textContent=''; $("#quizProgress").textContent=`${idx+1}/${total} ‚Äî ${mode==='local2'?(curr==='A'?p1:p2):p1}`; $("#quizModal").classList.remove("hidden"); let left=5; $("#quizFeedback").classList.add("text-slate-400"); $("#quizFeedback").textContent=`${left}s`; const t=setInterval(()=>{left--; $("#quizFeedback").textContent=`${left}s`; if(left<=0){clearInterval(t); judge("");}},1000); function cleanup(){clearInterval(t);} function judge(g){ const ok=matchAnswer(g||"",data[idx]); if(ok){ if(mode==='local2'){ if(curr==='A') correctA++; else correctB++; } else correctA++; } $("#quizFeedback").innerHTML=(ok?`<span class='text-emerald-400 font-semibold'>Correct!</span>`:`<span class='text-rose-400 font-semibold'>Not quite.</span>`)+` ${data[idx].name}`; setTimeout(()=>{idx++; if(mode==='local2') curr=(curr==='A'?'B':'A'); show();},400);} $("#quizSubmit").onclick=()=>{cleanup(); judge($("#quizGuess").value)}; $("#quizGuess").onkeydown=(e)=>{if(e.key==='Enter'){cleanup(); judge($("#quizGuess").value)}}; $("#quizSkip").onclick=()=>{cleanup(); judge("")}; $("#quizReveal").onclick=()=>{$("#quizFeedback").innerHTML=`<span class='text-slate-300'>${data[idx].name}</span>`}; }
  function finish(){ $("#quizModal").classList.add("hidden"); const ms=Date.now()-start; if(mode==='single'){ saveQuizResult(correctA,total,ms); grantXP(400); } else { const msPer=Math.max(1,Math.round(ms/2)); saveQuizResult(correctA,total,msPer); const list=JSON.parse(localStorage.getItem(QUIZ_LOG)||"[]"); list.push({correct:correctB,total,ms:msPer,ts:Date.now(),score:correctB*1e9-msPer,name:p2}); localStorage.setItem(QUIZ_LOG",JSON.stringify(list)); const a=getElo(p1), b=getElo(p2); const aScore=(correctA===correctB)?0.5:(correctA>correctB?1:0); const [na,nb]=eloUpdate(a,b,aScore); setElo(p1,na); setElo(p2,nb); grantXP(200); alert(`${p1}: ${correctA}/${total} | ${p2}: ${correctB}/${total}\\nELO ${Math.round(a)}‚Üí${Math.round(na)} vs ${Math.round(b)}‚Üí${Math.round(nb)}`);} renderTopQuizzers(); renderTopLevels(); }
  show();
}

// ---------- Leaderboards ----------
function renderTopModels(){ const w=$("#leaderboard"); if(!w) return; let list=ROOMS.slice().sort((a,b)=>(b.viewers||0)-(a.viewers||0)).slice(0,9); w.innerHTML=""; list.forEach((r,i)=>{const el=document.createElement("div"); el.className="rounded-xl p-3 bg-surface border border-white/10"; el.innerHTML=`<div class='flex items-center gap-3'><div class='w-10 h-10 rounded bg-gradient-to-br from-brand to-brand2 grid place-items-center font-black'>${i+1}</div><div class='flex-1'><div class='font-semibold'>${r.name}</div><div class='text-xs text-slate-400'>${r.region} ‚Ä¢ ${r.gender}</div></div><div class='text-right'><div class='font-mono'>${(r.viewers||0).toLocaleString()}</div><div class='text-xs text-slate-400'>viewers</div></div></div>`; w.append(el);}); }
function renderTopLevels(){ const w=$("#leaderboard"); if(!w) return; const meXP=getXP(); const sample=Array.from({length:12}).map((_,i)=>({name:`User${i+1}`,xp:Math.floor(Math.random()*totalForLevel(50))})); sample.push({name:"You",xp:meXP}); sample.sort((a,b)=>b.xp-a.xp); w.innerHTML=""; sample.slice(0,9).forEach((u,i)=>{const L=levelFromXP(u.xp); const el=document.createElement("div"); el.className="rounded-xl p-3 bg-surface border border-white/10"; el.innerHTML=`<div class='flex items-center gap-3'><div class='w-10 h-10 rounded bg-gradient-to-br from-brand to-brand2 grid place-items-center font-black'>${i+1}</div><div class='flex-1'><div class='font-semibold'>${u.name}</div><div class='text-xs text-slate-400'>Level ${L} ‚Ä¢ ${u.xp.toLocaleString()} XP</div></div></div>`; w.append(el);}); }
function renderTopQuizzers(){ const w=$("#leaderboard"); if(!w) return; const list=JSON.parse(localStorage.getItem(QUIZ_LOG)||"[]"); while(list.length<12){const right=Math.floor(50+Math.random()*50); const ms=Math.floor(30+Math.random()*600)*1000; const score=right*1e9-ms; list.push({correct:right,total:100,ms,ts:Date.now()-Math.random()*1e7,score,name:`User${list.length+1}`});} list.forEach((x,i)=>x.name=x.name||(i===0?"You":"User"+(i+1))); list.sort((a,b)=>b.score-a.score); w.innerHTML=""; list.slice(0,9).forEach((r,i)=>{const el=document.createElement("div"); el.className="rounded-xl p-3 bg-surface border border-white/10"; const time=(r.ms/1000).toFixed(1)+"s"; el.innerHTML=`<div class='flex items-center gap-3'><div class='w-10 h-10 rounded bg-gradient-to-br from-brand to-brand2 grid place-items-center font-black'>${i+1}</div><div class='flex-1'><div class='font-semibold'>${r.name||"You"}</div><div class='text-xs text-slate-400'>Correct ${r.correct}/${r.total} ‚Ä¢ Time ${time}</div></div></div>`; w.append(el);}); }
function renderTopDonors(){ const w=$("#leaderboard"); if(!w) return; const donations=JSON.parse(localStorage.getItem("nc_donations")||"{}"); if(Object.keys(donations).length<8){["Alex","Sam","Taylor","Jordan","Casey","Riley","Quinn","Avery","Morgan","Jamie","Parker","Finley"].forEach((n,i)=>donations[n]=donations[n]||Math.floor(100+i*50+Math.random()*4000)); donations["You"]=donations["You"]||Math.floor(Math.random()*500); localStorage.setItem("nc_donations",JSON.stringify(donations));} const arr=Object.entries(donations).map(([name,val])=>({name,value:val})); arr.sort((a,b)=>b.value-a.value); w.innerHTML=""; arr.slice(0,9).forEach((u,i)=>{const el=document.createElement("div"); el.className="rounded-xl p-3 bg-surface border border-white/10"; el.innerHTML=`<div class='flex items-center gap-3'><div class='w-10 h-10 rounded bg-gradient-to-br from-brand to-brand2 grid place-items-center font-black'>${i+1}</div><div class='flex-1'><div class='font-semibold'>${u.name}</div><div class='text-xs text-slate-400'>Donated ${u.value.toLocaleString()} üíé</div></div></div>`; w.append(el);}); }
function setDonation(user,amount){const m=JSON.parse(localStorage.getItem("nc_donations")||"{}"); m[user]=(m[user]||0)+amount; localStorage.setItem("nc_donations",JSON.stringify(m));}
(function tabs(){const tabs=document.getElementById("lbTabs"); if(!tabs) return; tabs.addEventListener("click",(e)=>{const btn=e.target.closest("button[data-tab]"); if(!btn) return; $$("button[data-tab]").forEach(b=>b.classList.remove("bg-white/10")); btn.classList.add("bg-white/10"); const t=btn.dataset.tab; if(t==="models") renderTopModels(); if(t==="levels") renderTopLevels(); if(t==="quizzers") renderTopQuizzers(); if(t==="donors") renderTopDonors();}); renderTopModels();})();

// ---------- Four-corner UI + Menu + Slots + Chatbot (injected) ----------
(function injectCornerUI(){
  const css=document.createElement("style"); css.textContent=`.corner-btn{position:fixed;width:56px;height:56px;border-radius:9999px;display:grid;place-items:center;background:#0b1220;border:1px solid rgba(255,255,255,.15);box-shadow:0 6px 18px rgba(0,0,0,.4);z-index:60}.corner-btn:hover{border-color:rgba(255,255,255,.3)}#btnProfile{top:16px;left:16px}#btnMenu{top:16px;right:16px}#btnSlots{bottom:16px;right:16px}#btnChat{bottom:16px;left:16px}.modal{position:fixed;inset:0;z-index:60;display:none}.modal.show{display:block}.modal-back{position:absolute;inset:0;background:rgba(0,0,0,.7)}.modal-card{position:relative;margin:4rem auto;width:min(92%,980px);background:#111827;border:1px solid rgba(255,255,255,.12);border-radius:16px;padding:16px}`; document.head.appendChild(css);
  document.body.insertAdjacentHTML('beforeend',`
    <button id="btnProfile" class="corner-btn" title="Profile">üë§</button>
    <button id="btnMenu" class="corner-btn" title="Menu">‚ò∞</button>
    <button id="btnSlots" class="corner-btn" title="Slots">üé∞</button>
    <button id="btnChat" class="corner-btn" title="Assistant">üí¨</button>
    <div id="modalProfile" class="modal"><div class="modal-back"></div><div class="modal-card"><div class="flex items-center justify-between mb-2"><div class="text-xl font-semibold">Your Profile</div><button class="px-2 py-1 rounded bg-white/10" data-close="#modalProfile">‚úï</button></div><div class="grid md:grid-cols-[220px,1fr] gap-4"><div class="rounded-xl p-3 bg-surface border border-white/10"><div class="w-24 h-24 rounded-full bg-gradient-to-br from-brand to-brand2 grid place-items-center font-black text-2xl mx-auto">U</div><div class="text-center mt-2 font-semibold">You</div><div class="text-center text-slate-400 text-xs">Nova Cams</div></div><div class="rounded-xl p-3 bg-surface border border-white/10"><div class="flex items-end gap-3"><div><div class="text-xs text-slate-400">LEVEL</div><div id="pfLevel" class="text-3xl font-black">0</div></div><div class="flex-1"><div class="h-3 rounded-full bg-black/40 overflow-hidden border border-white/10"><div id="pfBar" class="h-full rounded-full bg-gradient-to-r from-brand to-brand2" style="width:0%"></div></div><div class="mt-1 text-xs"><span id="pfInto">0</span>/<span id="pfNeed">1000</span> XP</div></div></div><div class="mt-3 grid sm:grid-cols-2 gap-2 text-sm"><div class="p-2 rounded bg-white/5">Total XP <span id="pfXP" class="float-right">0</span></div><div class="p-2 rounded bg-white/5">Quizzes Taken <span id="pfQ" class="float-right">0</span></div><div class="p-2 rounded bg-white/5">Tokens <span id="pfTok" class="float-right">0</span></div><div class="p-2 rounded bg-white/5">Gems <span id="pfGems" class="float-right">0</span></div></div></div></div></div>
    <div id="modalMenu" class="modal"><div class="modal-back"></div><div class="modal-card"><div class="flex items-center justify-between mb-2"><div class="text-xl font-semibold">Quick Actions</div><button class="px-2 py-1 rounded bg-white/10" data-close="#modalMenu">‚úï</button></div><div class="grid sm:grid-cols-2 lg:grid-cols-4 gap-3 text-sm"><button class="p-3 rounded-xl bg-surface border border-white/10 action-buy" data-kind="crypto">Buy with Crypto</button><button class="p-3 rounded-xl bg-surface border border-white/10 action-buy" data-kind="fiat">Buy with Fiat</button><button class="p-3 rounded-xl bg-surface border border-white/10" id="watchEarn">Watch Videos to Earn</button><button class="p-3 rounded-xl bg-surface border border-white/10" id="purchaseGems">Purchase Gems</button></div><div class="mt-4 text-xs text-slate-400">Purchases add to your donor total and token balance (demo).</div></div></div>
    <div id="modalSlots" class="modal"><div class="modal-back"></div><div class="modal-card"><div class="flex items-center justify-between mb-2"><div class="text-xl font-semibold">Mini Slots</div><button class="px-2 py-1 rounded bg-white/10" data-close="#modalSlots">‚úï</button></div><div class="grid lg:grid-cols-[1fr,260px] gap-4"><div class="rounded-xl p-4 bg-surface border border-white/10"><div id="slotReels" class="grid grid-cols-3 gap-2"></div></div><div class="rounded-xl p-4 bg-surface border border-white/10"><div class="text-sm">Bet</div><div id="slotBets" class="flex flex-wrap gap-2 my-2"></div><div class="text-sm">Reels</div><div id="slotReelCount" class="flex flex-wrap gap-2 my-2"></div><div class="text-sm">Balance: <span id="slotBal">0</span></div><div class="mt-2 text-sm">Last Win: <span id="slotWin">0</span></div><button id="slotSpin" class="mt-3 w-full px-3 py-2 rounded-xl bg-brand">Spin</button><div class="text-xs text-slate-400 mt-2">Payouts: All same = 10√ó bet; any 3-of-kind = 3√ó bet; any 2-of-kind ‚âà 1.5√ó bet.</div></div></div></div></div>
    <div id="modalChat" class="modal"><div class="modal-back"></div><div class="modal-card"><div class="flex items-center justify-between mb-2"><div class="text-xl font-semibold">Assistant</div><button class="px-2 py-1 rounded bg-white/10" data-close="#modalChat">‚úï</button></div><div id="chatBox" class="rounded-xl p-3 bg-surface border border-white/10 h-[60vh] overflow-y-auto"><div class="text-sm text-slate-300">üëã Welcome! I can help with Nova Cams. Attach screenshots/clips from this site and/or use the mic.</div></div><div class="mt-2 flex flex-wrap items-center gap-2"><input id="chatInput" class="flex-1 px-3 py-2 rounded-xl bg-surface border border-white/10" placeholder="Type a message‚Ä¶"><input id="chatFile" type="file" accept="image/*,video/*" class="hidden"><button id="chatAttach" class="px-3 py-2 rounded-xl bg-slate-700">Attach</button><button id="chatMic" class="px-3 py-2 rounded-xl bg-slate-700">üéôÔ∏è</button><button id="chatSend" class="px-3 py-2 rounded-xl bg-brand">Send</button></div><div class="text-xs text-slate-400 mt-1">Only media captured from this site is accepted. Voice uses your browser‚Äôs recognition if available.</div></div></div>
  `);
  // open/close
  $("#btnProfile")?.addEventListener("click",()=>$("#modalProfile").classList.add("show"));
  $("#btnMenu")?.addEventListener("click",()=>$("#modalMenu").classList.add("show"));
  $("#btnSlots")?.addEventListener("click",()=>{setupSlotsUI(); $("#modalSlots").classList.add("show")});
  $("#btnChat")?.addEventListener("click",()=>$("#modalChat").classList.add("show"));
  document.addEventListener("click",(e)=>{const b=e.target.closest("[data-close]"); if(b){document.querySelector(b.getAttribute("data-close"))?.classList.remove("show");} if(e.target.classList.contains("modal-back")) e.target.parentElement.classList.remove("show");});
  // profile fill
  $("#btnProfile")?.addEventListener("click",()=>{const info=progressInfo(); $("#pfLevel").textContent=info.L; $("#pfBar").style.width=Math.round(100*info.into/Math.max(1,info.gap))+"%"; $("#pfInto").textContent=info.into.toLocaleString(); $("#pfNeed").textContent=info.gap.toLocaleString(); $("#pfXP").textContent=getXP().toLocaleString(); $("#pfQ").textContent=(getQuizStats().taken)+''; $("#pfTok").textContent=bal().toLocaleString(); $("#pfGems").textContent=(parseInt(localStorage.getItem('nc_gems')||'0',10)).toLocaleString();});
  // buy / earn
  $$(".action-buy").forEach(btn=>btn.addEventListener("click",()=>{const kind=btn.dataset.kind; const amount=prompt(`How many tokens to buy with ${kind}?`); const n=parseInt(amount||"0",10); if(n>0){ setBal(bal()+n); setDonation("You",n); alert(`Purchased ${n} tokens via ${kind}.`); renderTopDonors(); }}));
  $("#watchEarn")?.addEventListener("click",async()=>{alert("Simulating a 5-second ad‚Ä¶"); await new Promise(r=>setTimeout(r,5000)); setBal(bal()+50); alert("You earned 50 tokens.");});
  $("#purchaseGems")?.addEventListener("click",()=>{const g=parseInt(prompt("How many gems?")||"0",10); if(g>0){ const cur=parseInt(localStorage.getItem("nc_gems")||"0",10); localStorage.setItem("nc_gems",cur+g); }});

  // slots
  const SYMBOLS=["üçí","üçã","üîî","‚≠ê","7Ô∏è‚É£","üíé"]; let SLOT_BET=10, SLOT_REELS=3;
  function setupSlotsUI(){const bets=[10,25,50,100,1000]; const bh=$("#slotBets"); bh.innerHTML=""; bets.forEach(v=>{const b=document.createElement("button"); b.className="px-3 py-2 rounded-full bg-white/10 text-sm"; b.textContent=v; b.onclick=()=>{SLOT_BET=v; $$("#slotBets button").forEach(x=>x.classList.remove('ring-2','ring-brand')); b.classList.add('ring-2','ring-brand');}; bh.append(b);}); bh.firstChild?.classList.add("ring-2","ring-brand"); const rh=$("#slotReelCount"); rh.innerHTML=""; for(let r=3;r<=6;r++){const b=document.createElement("button"); b.className="px-3 py-2 rounded-full bg-white/10 text-sm"; b.textContent=r; b.onclick=()=>{SLOT_REELS=r; buildReels(); $$("#slotReelCount button").forEach(x=>x.classList.remove('ring-2','ring-brand')); b.classList.add('ring-2','ring-brand');}; rh.append(b);} rh.firstChild?.classList.add("ring-2","ring-brand"); buildReels(); $("#slotSpin").onclick=spin; $("#slotBal").textContent=bal().toLocaleString(); }
  function buildReels(){const host=$("#slotReels"); host.className=`grid grid-cols-${Math.min(6,Math.max(3,SLOT_REELS))} gap-2`; host.innerHTML=""; for(let i=0;i<SLOT_REELS;i++){const d=document.createElement('div'); d.className="h-24 rounded-xl bg-black/40 border border-white/10 grid place-items-center text-4xl"; d.textContent="‚ùî"; host.append(d);} }
  function spin(){ if(bal()<SLOT_BET){alert("Not enough tokens."); return;} setBal(bal()-SLOT_BET); const rs=[]; $$("#slotReels>div").forEach(div=>{const sym=SYMBOLS[Math.floor(Math.random()*SYMBOLS.length)]; div.textContent=sym; rs.push(sym);}); const counts={}; rs.forEach(s=>counts[s]=(counts[s]||0)+1); let win=0; const vals=Object.values(counts); if(vals.some(n=>n===SLOT_REELS)) win=SLOT_BET*10; else if(vals.some(n=>n>=3)) win=SLOT_BET*3; else if(vals.some(n=>n>=2)) win=Math.round(SLOT_BET*1.5); $("#slotWin").textContent=win; if(win>0){ setBal(bal()+win); $("#slotBal").textContent=bal().toLocaleString(); } }

  // chatbot
  function addMsg(role,html){const box=$("#chatBox"); if(!box) return; const row=document.createElement("div"); row.className="mt-2"; row.innerHTML=`<div class='text-xs text-slate-400 mb-1'>${role}</div><div class='p-2 rounded-xl ${role==='You'?'bg-white/10':'bg-black/40'}'>${html}</div>`; box.append(row); box.scrollTop=box.scrollHeight;}
  $("#chatAttach")?.addEventListener("click",()=>$("#chatFile").click());
  $("#chatFile")?.addEventListener("change",()=>{const f=$("#chatFile").files[0]; if(!f) return; const url=URL.createObjectURL(f); if(f.type.startsWith("image")) addMsg("You", `<img src="${url}" class="max-h-40 rounded">`); else addMsg("You", `<video src="${url}" class="max-h-40 rounded" controls></video>`); addMsg("Assistant","Noted. I‚Äôll only review media captured from Nova Cams. What should I look for?");});
  $("#chatMic")?.addEventListener("click",async()=>{try{window.SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition; if(window.SpeechRecognition){const rec=new window.SpeechRecognition(); rec.lang=navigator.language||"en-US"; rec.onresult=(e)=>{const t=e.results[0][0].transcript; $("#chatInput").value=t; addMsg("You",t); botReply(t);}; rec.start();} else {alert("Speech recognition not supported in this browser.");}}catch(err){alert("Mic error: "+err);}});
  $("#chatSend")?.addEventListener("click",()=>{const t=$("#chatInput").value.trim(); if(!t) return; $("#chatInput").value=""; addMsg("You", t); botReply(t);});
  function botReply(text){const s=text.toLowerCase(); if(s.includes("quiz")) addMsg("Assistant","Open Quiz ‚Üí Settings to choose 10/25/50/100 questions, 5s timer, single or multiplayer with ELO."); else if(s.includes("level")) addMsg("Assistant","Levels go 0‚Üí1000 with +1000 XP each level. Earn XP via actions around the site."); else if(s.includes("leaderboard")) addMsg("Assistant","Leaderboards: Models, Donors, Levels, Quizzers. Use tabs to switch."); else addMsg("Assistant","Got it. Ask me about quiz, levels, tokens, or donors.");}
})();
